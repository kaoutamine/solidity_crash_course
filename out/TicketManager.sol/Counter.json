{
  "abi": [
    {
      "inputs": [],
      "name": "buyTicket",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060cb8061001f6000396000f3fe608060405260043610601c5760003560e01c8063edca914c146021575b600080fd5b60276029565b005b346000541460765760405162461bcd60e51b81526020600482015260166024820152751d1a19481c1c9a58d9481a5cc81a5b98dbdc9c9958dd60521b604482015260640160405180910390fd5b336000908152600160208190526040909120805460ff1916909117905556fea26469706673582212200b3b9520f1287a190a1f83711dfc44e2d9e86a12199266a61c6b3def0012700b64736f6c63430008110033",
    "sourceMap": "64:225:0:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610601c5760003560e01c8063edca914c146021575b600080fd5b60276029565b005b346000541460765760405162461bcd60e51b81526020600482015260166024820152751d1a19481c1c9a58d9481a5cc81a5b98dbdc9c9958dd60521b604482015260640160405180910390fd5b336000908152600160208190526040909120805460ff1916909117905556fea26469706673582212200b3b9520f1287a190a1f83711dfc44e2d9e86a12199266a61c6b3def0012700b64736f6c63430008110033",
    "sourceMap": "64:225:0:-:0;;;;;;;;;;;;;;;;;;;;;145:142;;;:::i;:::-;;;208:9;199:5;;:18;191:53;;;;-1:-1:-1;;;191:53:0;;216:2:1;191:53:0;;;198:21:1;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:1;;;267:52;336:18;;191:53:0;;;;;;;;262:10;254:19;;;;276:4;254:19;;;;;;;;:26;;-1:-1:-1;;254:26:0;;;;;;145:142::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "buyTicket()": "edca914c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"buyTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TicketManager.sol\":\"Counter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/TicketManager.sol\":{\"keccak256\":\"0x8f2a1d9f09150d7436e32a5bf8d51c3e05cfdba6e5fb846df778550d5ae5ec10\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5ad5ee7d220c60e6d530a1fe3223047b58100e3977ea9c729104a49ec88c6368\",\"dweb:/ipfs/QmefKWKhdgHgNAHemYmses8y66Q97xwm1SNZ1Y7ZwbEbkQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyTicket"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/TicketManager.sol": "Counter"
      },
      "libraries": {}
    },
    "sources": {
      "src/TicketManager.sol": {
        "keccak256": "0x8f2a1d9f09150d7436e32a5bf8d51c3e05cfdba6e5fb846df778550d5ae5ec10",
        "urls": [
          "bzz-raw://5ad5ee7d220c60e6d530a1fe3223047b58100e3977ea9c729104a49ec88c6368",
          "dweb:/ipfs/QmefKWKhdgHgNAHemYmses8y66Q97xwm1SNZ1Y7ZwbEbkQ"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/TicketManager.sol",
    "id": 28,
    "exportedSymbols": {
      "Counter": [
        27
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:252:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "38:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 27,
        "nodeType": "ContractDefinition",
        "src": "64:225:0",
        "nodes": [
          {
            "id": 3,
            "nodeType": "VariableDeclaration",
            "src": "87:13:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "95:5:0",
            "scope": 27,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "87:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 7,
            "nodeType": "VariableDeclaration",
            "src": "106:32:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tickets",
            "nameLocation": "131:7:0",
            "scope": 27,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "114:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "106:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "125:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26,
            "nodeType": "FunctionDefinition",
            "src": "145:142:0",
            "nodes": [],
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "181:106:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "199:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 12,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "208:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "212:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "208:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "199:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686520707269636520697320696e636f7272656374",
                        "id": 15,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "219:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8a992af63f201e99eb910585b27336a585f8113fa8259733136ca49912f897c",
                          "typeString": "literal_string \"the price is incorrect\""
                        },
                        "value": "the price is incorrect"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8a992af63f201e99eb910585b27336a585f8113fa8259733136ca49912f897c",
                          "typeString": "literal_string \"the price is incorrect\""
                        }
                      ],
                      "id": 10,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "191:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "191:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "191:53:0"
                },
                {
                  "expression": {
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18,
                        "name": "tickets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "254:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 21,
                      "indexExpression": {
                        "expression": {
                          "id": 19,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "262:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "266:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "262:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "254:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "276:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "254:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "254:26:0"
                }
              ]
            },
            "functionSelector": "edca914c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTicket",
            "nameLocation": "154:9:0",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "163:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "181:0:0"
            },
            "scope": 27,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27
        ],
        "name": "Counter",
        "nameLocation": "73:7:0",
        "scope": 28,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 0
}